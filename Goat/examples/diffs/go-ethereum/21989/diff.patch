diff --git a/eth/downloader/downloader_test.go b/eth/downloader/downloader_test.go
index 5de1ef3..e5bc429 100644
--- a/eth/downloader/downloader_test.go
+++ b/eth/downloader/downloader_test.go
@@ -565,7 +565,7 @@ func testThrottling(t *testing.T, protocol uint, mode SyncMode) {
 		<-proceed
 	}
 	// Start a synchronisation concurrently
-	errc := make(chan error, 1)
+	errc := make(chan error)
 	go func() {
 		errc <- tester.sync("peer", nil, mode)
 	}()
diff --git a/miner/worker.go b/miner/worker.go
index e81d50e..9f997d5 100644
--- a/miner/worker.go
+++ b/miner/worker.go
@@ -350,11 +350,7 @@ func (w *worker) newWorkLoop(recommit time.Duration) {
 			atomic.StoreInt32(interrupt, s)
 		}
 		interrupt = new(int32)
-		select {
-		case w.newWorkCh <- &newWorkReq{interrupt: interrupt, noempty: noempty, timestamp: timestamp}:
-		case <-w.exitCh:
-			return
-		}
+		w.newWorkCh <- &newWorkReq{interrupt: interrupt, noempty: noempty, timestamp: timestamp}
 		timer.Reset(recommit)
 		atomic.StoreInt32(&w.newTxs, 0)
 	}
